{"name":"Flipper Redis","tagline":"Redis adapter for Flipper","body":"# Flipper Redis\r\n\r\nA [Redis](https://github.com/redis/redis-rb) adapter for [Flipper](https://github.com/jnunemaker/flipper).\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'flipper-redis'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself with:\r\n\r\n    $ gem install flipper-redis\r\n\r\n## Usage\r\n\r\n```ruby\r\nrequire 'flipper/adapters/redis'\r\nclient = Redis.new\r\nadapter = Flipper::Adapters::Redis.new(client)\r\nflipper = Flipper.new(adapter)\r\n# profit...\r\n```\r\n\r\n## Internals\r\n\r\nEach feature is stored in a redis hash, which means getting a feature is single query.\r\n\r\n```ruby\r\nrequire 'flipper/adapters/redis'\r\nrequire 'redis/namespace'\r\n\r\nclient = Redis.new\r\nnamespaced_client = Redis::Namespace.new(:flipper, :redis => client)\r\nadapter = Flipper::Adapters::Redis.new(namespaced_client)\r\nflipper = Flipper.new(adapter)\r\n\r\n# Register a few groups.\r\nFlipper.register(:admins) { |thing| thing.admin? }\r\nFlipper.register(:early_access) { |thing| thing.early_access? }\r\n\r\n# Create a user class that has flipper_id instance method.\r\nUser = Struct.new(:flipper_id)\r\n\r\nflipper[:stats].enable\r\nflipper[:stats].enable flipper.group(:admins)\r\nflipper[:stats].enable flipper.group(:early_access)\r\nflipper[:stats].enable User.new('25')\r\nflipper[:stats].enable User.new('90')\r\nflipper[:stats].enable User.new('180')\r\nflipper[:stats].enable flipper.random(15)\r\nflipper[:stats].enable flipper.actors(45)\r\n\r\nflipper[:search].enable\r\n\r\nprint 'all keys: '\r\npp namespaced_client.keys\r\n# all keys: [\"stats\", \"flipper_features\", \"search\"]\r\n\r\nprint \"known flipper features: \"\r\npp namespaced_client.smembers(\"flipper_features\")\r\n# known flipper features: [\"stats\", \"search\"]\r\n\r\nputs 'stats keys'\r\npp namespaced_client.hgetall('stats')\r\n# stats keys\r\n# {\"boolean\"=>\"true\",\r\n#  \"groups/admins\"=>\"1\",\r\n#  \"actors/25\"=>\"1\",\r\n#  \"percentage_of_random\"=>\"15\",\r\n#  \"percentage_of_actors\"=>\"45\",\r\n#  \"groups/early_access\"=>\"1\",\r\n#  \"actors/90\"=>\"1\",\r\n#  \"actors/180\"=>\"1\"}\r\n\r\nputs 'search keys'\r\npp namespaced_client.hgetall('search')\r\n# search keys\r\n# {\"boolean\"=>\"true\"}\r\n\r\nputs 'flipper get of feature'\r\npp adapter.get(flipper[:stats])\r\n# flipper get of feature\r\n# {:boolean=>\"true\",\r\n#  :groups=>#<Set: {\"admins\", \"early_access\"}>,\r\n#  :actors=>#<Set: {\"25\", \"90\", \"180\"}>,\r\n#  :percentage_of_actors=>\"45\",\r\n#  :percentage_of_random=>\"15\"}\r\n```\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Added some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}